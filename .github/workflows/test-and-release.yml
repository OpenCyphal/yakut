name: 'Test & Release'
on: push

jobs:
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        py: [ '3.10', '3.11', '3.12', '3.13' ]
        # On Windows, we select the configurations we test manually because we only have a few runners,
        # and because the infrastructure is hard to maintain using limited resources.
        include:
          - { os: win-pcap, py: '3.12' }
    runs-on: ${{ matrix.os }}
    env:
      FORCE_COLOR: 1
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - name: Configure GNU/Linux
        if: ${{ runner.os == 'Linux' }}
        # language=bash
        run: |
          python --version
          sudo apt-get --ignore-missing update || true
          sudo apt-get install -y linux-*-extra-$(uname -r) ncat
          sudo apt-get install -y libsdl2-2.0-0   # For PySDL2. On Windows/macOS the binaries are pulled from PyPI.
          sudo apt-get install -y libasound2-dev  # For RtMidi.

      # Only one statement per step to ensure the error codes are not ignored by PowerShell.
      - run: python -m pip install --upgrade attrs pip setuptools nox
      - run: nox --non-interactive --session test --python ${{ matrix.py }}
      - run: nox --non-interactive --session lint

      - uses: actions/upload-artifact@v4
        if: (success() || failure())
        with:
          # The matrix is shown for convenience but this is fragile because the values may not be string-convertible.
          # Shall it break one day, feel free to remove the matrix from here.
          name: ${{github.job}}-#${{strategy.job-index}}-${{job.status}}-${{join(matrix.*, ',')}}
          path: "**/*.log"
          retention-days: 90
          include-hidden-files: true

  release:
    name: Release
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '#release') || contains(github.ref, '/main')
    needs: test
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Create distribution wheel
        # language=bash
        run: |
          python -m pip install --upgrade packaging pip setuptools wheel twine
          python setup.py sdist bdist_wheel

      - name: Get release version
        run: echo "yakut_version=$(cat yakut/VERSION)" >> $GITHUB_ENV

      - name: Upload distribution
        run: |
          python -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN_YAKUT }}

      - name: Push version tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ env.yakut_version }}
          tag_prefix: ''
