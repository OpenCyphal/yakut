[metadata]
name            = yakut
version         = file: yakut/VERSION
author          = OpenCyphal
author_email    = maintainers@opencyphal.org
url             = https://opencyphal.org
description     = Simple CLI tool for diagnostics and debugging of Cyphal networks.
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT

keywords =
    uavcan
    data-bus
    can-bus
    ethernet
    vehicular
    onboard-networking
    avionics
    communication-protocol
    cli
    utility

classifiers =
    Environment :: Console
    Intended Audience :: Developers
    Intended Audience :: Customer Service
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering
    Topic :: Scientific/Engineering :: Interface Engine/Protocol Translator
    Topic :: Scientific/Engineering :: Visualization
    Topic :: Software Development :: Object Brokering
    Topic :: System :: Distributed Computing
    Topic :: System :: Networking
    Topic :: System :: Monitoring
    Topic :: Terminals
    Topic :: Utilities
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Operating System :: POSIX :: Linux
    Operating System :: Microsoft :: Windows
    Operating System :: MacOS
    Typing :: Typed

[options]
zip_safe             = False
include_package_data = True
packages             = find:
install_requires =
    pycyphal[transport-udp,transport-serial,transport-can-pythoncan] ~= 1.8
    ruamel.yaml     <  0.18
    requests        ~= 2.27
    simplejson      ~= 3.17
    coloredlogs     ~= 15.0
    click           ~= 8.1
    psutil          ~= 5.9
    scipy           ~= 1.8

[options.extras_require]
joystick =
    # SDL2 bindings. For Windows and macOS there are pre-built SDL2 binaries provided.
    pysdl2          <  2.0
    pysdl2-dll      ~= 2.0; sys_platform == "win32" or sys_platform == "darwin"
    # MIDI controller support.
    mido            ~= 1.2
    python-rtmidi   ~= 1.4

[options.packages.find]
# https://setuptools.readthedocs.io/en/latest/setuptools.html#find-namespace-packages
include =
    yakut
    yakut.*

[options.entry_points]
console_scripts =
    yakut = yakut:main
    y     = yakut:main

[options.package_data]
* =
        *
       */*
      */*/*
     */*/*/*
    */*/*/*/*

# ---------------------------------------- PYTEST ----------------------------------------
[tool:pytest]
norecursedirs =
    tests/deps
testpaths        = yakut tests
python_files     = *.py
python_classes   = _UnitTest
python_functions = _unittest_
log_level        = DEBUG
log_cli_level    = WARNING
log_cli          = true
log_file         = pytest.log
# Unraisable exceptions are filtered because PyTest yields false-positives coming from PyCyphal.
addopts          = --doctest-modules -v -p no:unraisableexception
asyncio_mode     = auto

# ---------------------------------------- MYPY ----------------------------------------
[mypy]
# Python version is not specified to allow checking against different versions.
exclude = venv
warn_return_any        = True
warn_unused_configs    = True
disallow_untyped_defs  = True
check_untyped_defs     = True
no_implicit_optional   = True
warn_redundant_casts   = True
warn_unused_ignores    = True
show_error_context     = True
strict_equality        = True
implicit_reexport      = False
# We don't want MyPy to go checking generated code and its dependencies.
follow_imports         = silent
mypy_path =
    .compiled

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-pydsdl.*]
ignore_missing_imports = True

[mypy-pycyphal.*]
ignore_missing_imports = True

[mypy-numpy.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-ruamel.*]
ignore_missing_imports = True
follow_imports = skip

[mypy-click]
follow_imports = silent

# ---------------------------------------- COVERAGE ----------------------------------------
[coverage:run]
data_file = .coverage
branch    = True
parallel  = True
source =
    yakut
    tests

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    assert False
    if False:
    if __name__ == .__main__.:

# ---------------------------------------- PYLINT ----------------------------------------
[pylint.MASTER]
fail-under=9.9

[pylint.MESSAGES CONTROL]
# Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.
confidence=UNDEFINED
# Advanced semantic analysis is broken in PyLint so we just disable these checks since they add nothing but noise.
# These aspects are addressed by MyPy in a more sensible way.
disable=
    cyclic-import,
    useless-import-alias,
    f-string-without-interpolation,
    import-outside-toplevel,
    fixme,
    too-few-public-methods,
    inconsistent-return-statements,
    too-many-arguments,
    import-error,
    misplaced-comparison-constant,
    unsubscriptable-object,
    too-many-statements,
    too-many-instance-attributes,
    eval-used,
    unspecified-encoding

[pylint.REPORTS]
output-format=colorized

[pylint.DESIGN]
max-branches=20
max-locals=30

[pylint.FORMAT]
max-line-length=120
max-module-lines=3000

[pylint.BASIC]
variable-rgx=[a-z_][a-z0-9_]*

[pylint.SIMILARITIES]
min-similarity-lines=20
